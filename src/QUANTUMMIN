
       common /QPRAML/ IFDENSE, IFPULSE, IFRKQ, IFSMALLMEMORY
       logical         IFDENSE, IFPULSE, IFRKQ, IFSMALLMEMORY

       common /QPRAMI/ iqstep,nqstep,numqd,numsp,nstate,nrho,neqn,nEh
     $                , n_in_row,ltonq,gs_handle_q_H,nstate_p,ham_nnz
     $                , mpi_win_r,c_offset,mpi_win_i,mpi_win_c
     $                , gs_handle_q_conc,maxPartialTrace
       integer         iqstep,nqstep,numqd,numsp,nstate,nrho,neqn,nEh
     $                , n_in_row,ltonq,gs_handle_q_H,nstate_p,ham_nnz
     $                , mpi_win_r,c_offset,mpi_win_i,mpi_win_c
     $                , gs_handle_q_conc,maxPartialTrace

       common /QPRAMR/ timemax, Emin, Emax, dEh, relerr, abserr, autime
     $               , timeunit,rintensity,rintensity0,energy0,eV,debye
     $               , omega_s,gamma_s,s_mu,energy0_pls
     $               , omega_q,gamma_q,q_mu,gamma_d,qradius,g_couple       
     $               , pulse_omega_0,pulse_t_0,pulse_alpha
     $               , pulse_duration,eesu_per_au,c_speed,d_per_au 
     $               , eps_med,timeold,printdt
     $               , q_mu_m    (lnumqd)
     $               , omega_q_m (lnumqd)
     $               , gamma_q_m (lnumqd)
     $               , gamma_d_m (lnumqd)
     $               , g_couple_m(lnumqd), g_ndot(lnumqd,lnumqd)

       real*8          timemax, Emin, Emax, dEh, relerr, abserr, autime
     $               , timeunit,rintensity,rintensity0,energy0,eV,debye
     $               , omega_s,gamma_s,s_mu,energy0_pls
     $               , omega_q,gamma_q,q_mu,gamma_d,qradius,g_couple            
     $               , pulse_omega_0,pulse_t_0,pulse_alpha
     $               , pulse_duration,eesu_per_au,c_speed,d_per_au
     $               , eps_med,q_mu_m,omega_q_m,timeold,printdt
     $               , gamma_q_m,gamma_d_m,g_couple_m,g_ndot

       common /QPRAMI/ nq_minimali(lnumqd,2*level**lnumqd),iwork(5)
     $               , isstate(lstate), iqstate_m(lnumqd,lstate)
       integer         nq_minimali,isstate,iqstate_m,iwork




       common /QPRAMV/ ham_diag(level**lnumqd)
     $               , ham_sys_min((2*level**lnumqd-1)*level**lnumqd)
     $               , ham_qmu_min((2*level**lnumqd-1)*level**lnumqd)
     $               , ham_smu_min((2*level**lnumqd-1)*level**lnumqd)
     $               , ham_smu_pls((2*level**lnumqd-1)*level**lnumqd)
     $               , ham_qmu_pls((2*level**lnumqd-1)*level**lnumqd)
     $               , work(100 + 21*2*lstate*lstate/lp)
     $               , hamilt_0_m_p ((2*level**lnumqd-1)*lstate)
     $               , hamilt_m_p   ((2*level**lnumqd-1)*lstate)
     $               , hamilt_I_m_p ((2*level**lnumqd-1)*lstate)
     $               , nq_minimal(lnumqd,2*level**lnumqd)
     $               , ham_a((2*level**lnumqd-1)*lstate)
     $               , ham_m_p_a((2*level**lnumqd-1)*lstate)
     $               , ham_0_m_p_a((2*level**lnumqd-1)*lstate)
     $               , ham_ia(lstate+1)
     $               , ham_ja((2*level**lnumqd-1)*lstate)

       real*8          ham_diag,ham_sys_min,ham_qmu_min,ham_smu_min
       real*8          ham_qmu_pls,ham_smu_pls,work,hamilt_0_m_p
       real*8          hamilt_m_p,hamilt_I_m_p,nq_minimal
       real*8          ham_a,ham_m_p_a,ham_0_m_p_a
       integer         ham_ia,ham_ja
       common /QPRAMC/ rho      (lstate,lstate/lp)
     $               , drho     (lstate,lstate/lp)
     $               , red_rho     (level**lnumqd,level**lnumqd)
     $               , energy_t (lEh)
     $               , s_mu_frequency(lEh)
     $               , q_mu_frequency(lEh)
     $               , tmp_c1(lstate,lstate/lp)

       complex*16      rho, drho, tmp_c1, red_rho
       complex*16      energy_t,s_mu_frequency,q_mu_frequency

       common /QPRAMW/ rho_r       (lstate,lstate/lp)
     $               , rho_i       (lstate,lstate/lp)
     $               , k_rho_r     (lstate,lstate/lp)
     $               , k_rho_i     (lstate,lstate/lp)
     $               , resrho_r    (lstate,lstate/lp)
     $               , resrho_i    (lstate,lstate/lp)
     $               , tmp_r1      (lstate,lstate/lp)
     $               , tmp_r2      (lstate,lstate/lp)
     $               , tmp_i1      (lstate,lstate/lp)
     $               , tmp_i2      (lstate,lstate/lp)
     $               , glo_num_q_concV (lstate*lstate/lp)
     $               , glo_num_q_Hv(lstate*lstate/lp)
       real*8          rho_r,rho_i,k_rho_r,k_rho_i,resrho_r,resrho_i
       real*8          tmp_r1,tmp_r2,tmp_i1,tmp_i2
       integer         glo_num_q_Hv,glo_num_q_concV !FIXME 12-17-14 Matt Otten: integer*8 does not work on blues
       
       common /QTIME2/  qctime1, qctime2, qctime3, qctime4
     $               ,  qrtime1, qrtime2, qrtime3, qrtime4
       real             qctime1, qctime2, qctime3, qctime4
     $               ,  qrtime1, qrtime2, qrtime3, qrtime4


       common /QPRAMP/ frequency(lstate,lstate/lp,lEh) 
     $               , omega    (lEh) 
     $               , hb_omega (lEh)
     $               , state_sums(lstate,lstate/lp) 
       real*8          frequency,omega,hb_omega,state_sums

       common /qarnolV/
     $   qU  (2*lstate*lstate)                   
     $,  qV0 (2*lstate*lstate,larnol+1)
     $,  qV  (2*lstate*lstate,larnol)
     $,  qVt (larnol,2*lstate*lstate)
     $,  qH0 (larnol+1,larnol)
     $,  qH  (larnol,larnol)
     $,  qW  (larnol)
       real*8 qU,qV0,qV,qVt,qH0,qH,qW

       common /qarnolI/ qmarnol
       integer          qmarnol


       common /qarnolW/ qws(2*larnol*(larnol+2))
     $,                 qrwork(2*larnol)
      real*8            qws,qrwork

      common /qarnolC/  qeval(larnol),qzr(larnol,larnol)
     $               ,  qzri(larnol,larnol)
     $               ,  qzh(larnol,larnol),qzh2(larnol),qzh3(larnol)
     $               ,  qawork(larnol)
      complex*16        qeval,qzri,qzr,qzh,qzh2,qzh3,qawork

      common /qarnolWI/  iqpiv(larnol)
      integer            iqpiv
