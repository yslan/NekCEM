c=======================================================================
c
c     Common blocks for cem model.
c
c     Many parameters are defined in the SIZEu file, which is local to
c     each example, so we define them here.
c
c     - nelt is the number of elements
c     - lelt if the length of the element array; we necessarily have
c     nelt <= lelt
c     - nxzfl = lx1*lz1*2*ldim*nelt is the total number of points on the
c     faces
c     - lxzfl = lx1*lz1*2*ldim*lelt is the length of the face-points
c     array
c
c=======================================================================
      common /iwork1/ iwork1(2*lelt)
      common /iwork2/ iwork2(4*(ldim-1)*lelt)
      common /iwork3/ iwork3(4*(ldim-1)*lelt)
      integer iwork1,iwork2,iwork3

      common /eflg/ ifcentral,ifupwind,ifsrc,ifinc,ifdrude,ifgraph,ifpml
     $     ,ifppp,ifpp,ifeig,ifwaveguide,ifpec,ifdtn,ifneu,ifpmc,iftm
     $     ,ifte,ifexct,ifdealias,iffilter,ifinhom,ifnm,ifrob,ifcur
     $     ,ifexp,ifrk,ifbdf,ifbdf1,ifbdf2,ifrk45,ifrk44,ifrk33,ifrk22
     $     ,ifsim,ifsim5,ifsim4,ifsim3,ifsim2,ifsim1,ifpoisson,ific
     $     ,ifrestart,ifbeam,ifwake,ifsrfint,ifvardt,ifwaket,ifnapy
     $     ,ifmovw,ifsftf,ifloren,ifhydro,ifsol,ifscat,ifdielec,ifdtctl
     $     ,ifpbg,ifdouble,ifvtk,ifdirect,ifcg,ifgmres,ifprecon
     $     ,ifgfdmdd,ifsemg,iffdm
      logical ifcentral,ifupwind,ifsrc,ifinc,ifdrude,ifgraph,ifpml,ifppp
     $     ,ifpp,ifeig,ifwaveguide,ifpec,ifdtn,ifneu,ifpmc,iftm,ifte
     $     ,ifexct,ifdealias,iffilter,ifinhom,ifnm,ifrob,ifcur, ifexp
     $     ,ifrk,ifbdf,ifbdf1,ifbdf2,ifrk45,ifrk44,ifrk33,ifrk22, ifsim
     $     ,ifsim5,ifsim4,ifsim3,ifsim2,ifsim1, ifpoisson,ific,ifrestart
     $     ,ifbeam,ifwake,ifsrfint,ifvardt,ifwaket, ifnapy,ifmovw,ifsftf
     $     ,ifloren,ifhydro,ifsol,ifscat,ifdielec, ifdtctl,ifpbg
     $     ,ifdouble,ifvtk,ifdirect,ifcg,ifgmres,ifprecon,ifgfdmdd
     $     ,ifsemg,iffdm

      integer lr2
      parameter (lr2=lx1*lx1)

      common /cemfce1/
     $     cemface(2*ldim*lx1*lz1*lelt),
     $     cemface_alt(2*ldim*lx1*lz1*lelt),
c     Point from 1,ncemcur to global face number
     $     cemcur(2*ldim*lx1*lz1*lelt),
     $     cemslice(2*ldim*lx1*lz1*lelt)
      real cemface,cemface_alt,cemcur,cemslice

      common /cemfce2/
     $     ncemface,            ! number of points on the faces
     $     ncemcur,             ! number of points on faces with current
     $     ncemslice
      integer ncemface,ncemcur,ncemslice

      common /cemfce3/ icomm_option
      integer icomm_option

      common /nekwav/ cspeed,eta_1,eta_2,ttr,rre,ttr2,rre2
      real cspeed,eta_1,eta_2,ttr,rre,ttr2,rre2

      common /regioni/
     $     if_in_region(lelt)   ! put markers for elements in this array
      integer if_in_region

      common /emmod/ imode
      integer imode
      common /ifld_num/ ifld_num
      integer ifld_num

      common /scals/ nmscale,xyzscale,sscale,upscale,bound,fldmax
      real nmscale,xyzscale,sscale,upscale,bound,fldmax

      common /NPER/    n_period,nperiod,nopstep
      integer          n_period,nperiod,nopstep

      common /DTLOG/   dtchk
      logical          dtchk
      common /DTCNT/   idtchg
      integer          idtchg

      common /EDIR/    eltdir(lelt)
      character*5      eltdir

      common /mvframe/ mw0,mw1,mw2,mwcnt
      integer          mw0,mw1,mw2,mwcnt
      common /transpa/ tsurface,trans_scat,trans_tot,trans_inc,
     $                 xminval,yminval,zminval,
     $                 xmaxval,ymaxval,zmaxval
      real             tsurface,trans_scat,trans_tot,trans_inc,
     $                 xminval,yminval,zminval,
     $                 xmaxval,ymaxval,zmaxval

      common /emflags/ incflag
      integer          incflag

      common /irstrt/  irststep, irstdumpno
      integer          irststep, irstdumpno

      common /basescat/  outpml (lx1,ly1,lz1,lelt)
      real outpml

      common /incfld/
c     Number of points which need the incident field added
     $     ncemincfld,
c     Point from 1,nceminc to the global point number
     $     cemincfld(lxzfl)
      integer ncemincfld,cemincfld
c=====================================================================
c   Main Variables for  Maxwell Solver
c=====================================================================
      COMMON /MAXWELLV/  HN     (lpts1,3)  ! numeric solution vector H
     $             ,     EN     (lpts1,3)  ! numeric solution vector E
     $             ,     SHN    (lpts1,3)  ! exact solution vector H
     $             ,     SEN    (lpts1,3)  ! exact solution vector E
     $             ,     kHN    (lpts1,3)  ! RK step for H
     $             ,     kEN    (lpts1,3)  ! RK step for E
     $             ,     resHN  (lpts1,3)  ! resisual for H
     $             ,     resEN  (lpts1,3)  ! residual for E
     $             ,     incHN  (lpts1,3)  ! incident field for H
     $             ,     incEN  (lpts1,3)  ! incident field for E
     $             ,     scatHN (lpts1,3)  ! scattered field for H
     $             ,     scatEN (lpts1,3)  ! scattered field for E
     $             ,     errHN  (lpts1,3)  ! errors of H
     $             ,     errEN  (lpts1,3)  ! errors of E
     $             ,     errJN  (lpts1,3)
     $             ,     hbm1   (lpts1)    ! inverse mass for H
     $             ,     ebm1   (lpts1)    ! inverse mass for E
      COMMON /MAXWELLF/  fHN    (lxzfl1,3)
     $             ,     fEN    (lxzfl1,3)
      real               HN,EN,SHN,SEN,kHN,kEN
      real               resHN , resEN
      real               incHN , incEN
      real               scatHN, scatEN
      real               errHN , errEN, errJN
      real               hbm1  , ebm1
      real               fHN   , fEN
c=====================================================================
c   Material parameters
c=====================================================================
c     Volume material parameters.
      common /materialv/
     $     permittivity(lpts1),
     $     permeability(lpts1),
     $     impede(lpts1),
     $     conduc(lpts1),
     $     faceif(lpts1)
c     Face material parameters
      common /materialf/
     $     zimpede(lxzfl1),     ! Impedance on the faces
     $     yconduc(lxzfl1),     ! Admittance on the faces
     $     Y_0(lxzfl1),         ! Y_0 = 0.5*(Y_0^+ + Y_0^-)
     $     Y_1(lxzfl1),         ! Y_1 = Y_0^+
     $     Z_0(lxzfl1),         ! Z_0 = 0.5*(Z_0^+ + Z_0^-)
     $     Z_1(lxzfl1),         ! Z_1 = Z_0^+
     $     F_0(lxzfl1),
     $     facef(lxzfl1),
c     Use `fincmarker` to mark where the incident field needs to be
c     added.
     $     fincmarker(lxzfl1),
c     Use `f2dmarker` to mark the faces where there are 2D materials.
     $     f2dmarker(lxzfl1)
      integer fincmarker,f2dmarker
      real zimpede,yconduc,facef,Y_0,Y_1,Z_0,Z_1,F_0
      real permittivity,permeability
      real impede,conduc,faceif
c=====================================================================
c   Additional Variables for Drude/Lorentz/Hydraulic models
c=====================================================================
      common /modelsv/
     $     JN(lpts10,3),        ! current vectors
     $     JN1(lpts10,3),
     $     JN2(lpts10,3),
     $     JN3(lpts10,3),
     $     PN1(lpts10,3),       ! polarization vectors
     $     PN2(lpts10,3),
     $     PN3(lpts10,3),
     $     QN1(lpts10,3),       ! intermediate variables QN1
     $     QN2(lpts10,3),       ! intermediate variables QN1
     $     QN3(lpts10,3),       ! intermediate variables QN1
     $     kJN1(lpts10,3),      ! RK step for JN
     $     kJN2(lpts10,3),
     $     kJN3(lpts10,3),
     $     kPN1(lpts10,3),      ! RK step for PN
     $     kPN2(lpts10,3),
     $     kPN3(lpts10,3),
     $     kQN1(lpts10,3),      ! RK step for PN
     $     kQN2(lpts10,3),
     $     kQN3(lpts10,3),
     $     resJN1(lpts10,3),    ! residual for JN
     $     resJN2(lpts10,3),
     $     resJN3(lpts10,3),
     $     resPN1(lpts10,3),    ! residual for PN
     $     resPN2(lpts10,3),
     $     resPN3(lpts10,3),
     $     resQN1(lpts10,3),    ! intermediate variables QN1
     $     resQN2(lpts10,3),    ! intermediate variables QN1
     $     resQN3(lpts10,3),    ! intermediate variables QN1
     $     resWN1(lpts10,3)     ! working array
c=====================================================================
c   Additional Variables for graphene model
c=====================================================================
      common /modelsf/
     $     fJN(lxzfl10,3),      ! face current
     $     fJN1(lxzfl10,3),     ! auxillary currents
     $     fJN2(lxzfl10,3),
     $     fJN3(lxzfl10,3),
     $     fPN1(lxzfl10,3),
     $     fPN2(lxzfl10,3),
     $     fPN3(lxzfl10,3),
     $     fQN1(lxzfl10,3),
     $     fQN2(lxzfl10,3),
     $     fQN3(lxzfl10,3),
     $     kfJN1(lxzfl10,3),
     $     kfJN2(lxzfl10,3),
     $     kfJN3(lxzfl10,3),
     $     kfPN1(lxzfl10,3),
     $     kfPN2(lxzfl10,3),
     $     kfPN3(lxzfl10,3),
     $     kfQN1(lxzfl10,3),
     $     kfQN2(lxzfl10,3),
     $     kfQN3(lxzfl10,3),
     $     resfJN1(lxzfl10,3),
     $     resfJN2(lxzfl10,3),
     $     resfJN3(lxzfl10,3),
     $     resfPN1(lxzfl10,3),
     $     resfPN2(lxzfl10,3),
     $     resfPN3(lxzfl10,3),
     $     resfQN1(lxzfl10,3),
     $     resfQN2(lxzfl10,3),
     $     resfQN3(lxzfl10,3)
      real JN,JN1,JN2,JN3
      real PN1,PN2,PN3
      real QN1,QN2,QN3
      real kJN1,kJN2,kJN3
      real kPN1,kPN2,kPN3
      real kQN1,kQN2,kQN3
      real resJN1,resJN2,resJN3
      real resPN1,resPN2,resPN3,resWN1
      real resQN1,resQN2,resQN3
      real fJN,fJN1,fJN2,fJN3
      real fPN1,fPN2,fPN3
      real fQN1,fQN2,fQN3
      real kfJN1,kfJN2,kfJN3
      real kfPN1,kfPN2,kfPN3
      real kfQN1,kfQN2,kfQN3
      real resfJN1,resfJN2,resfJN3
      real resfQN1,resfQN2,resfQN3
      real resfPN1,resfPN2,resfPN3
c=====================================================================
c   Parameters for Drude/Lorentz/hydraulic models
c=====================================================================
      common /material2/
c     Drude model parameters
     $     drudea(lpts10),
c     Lorentz model parameters
     $     drudeb(lpts10),
     $     lorena(lpts10,3),
     $     lorenb(lpts10,3),
     $     lorenc(lpts10,3),
c     Mark where dispersive materials are with `vdispmarker`
     $     vdispmarker(lpts10),
c    Point from 1,ncemdrude to global volume number
     $     cemdrude(lpts10),
c     Point from 1,ncemlorentz to global volume number
     $     cemlorentz(lpts10),
c     Total number of Drude material points
     $     ncemdrude,
c     Total number of Lorentz material points
     $     ncemlorentz
      integer vdispmarker,ncemdrude,cemdrude,ncemlorentz,cemlorentz
      real drudea,drudeb,lorena,lorenb,lorenc

      common /drudepar/
     $     drude_alpha,
     $     drude_beta,
     $     hydro_gamma,
     $     hydro_beta,
     $     hydro_omega
      real drude_alpha,drude_beta
      real hydro_gamma,hydro_beta,hydro_omega
c=====================================================================
c   Parameters for graphene model
c=====================================================================
      common /graphene/
c     Drude term parameters
     $     a_d,
     $     b_d,
c     First critical point term parameters
     $     b_cp1,
     $     a_211,
     $     a_221,
     $     b_11,
     $     b_21,
c     Second critical point term parameters
     $     b_cp2,
     $     a_212,
     $     a_222,
     $     b_12,
     $     b_22
      real a_d,b_d
      real b_cp1,a_211,a_221,b_11,b_21
      real b_cp2,a_212,a_222,b_12,b_22
c=====================================================================
c   PML Variables for RK5
c=====================================================================
      common /pmlvar2/
     $     kbn(lpts1,3),
     $     kdn(lpts1,3)
      real kbn,kdn
c=====================================================================
c   Variables for Accelerator Beam Simulations
c=====================================================================
      common /beamv/
     $     bunchr(lpts1),
     $     bunchz(lpts1)
      real bunchr,bunchz
