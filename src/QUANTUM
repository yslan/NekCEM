
c...   Variables for density matrix approach for solving quantum systems

       integer    numqd,numsp,nstate,nrho,neqn,nEh,nqstep
       integer    numberOfQuantumDots
       parameter (numberOfQuantumDots = 2) ! number of quantum dots
       parameter (numqd   = 2      )       ! number of qd states
       parameter (numsp   = 5      )       ! number of surface plasmon states
       parameter (nstate  = numqd**numberOfQuantumDots*numsp)   ! number of total states
       parameter (nrho    = nstate*nstate) ! number of rho
       parameter (neqn    = 2*nrho )       ! number of eqns: real/imag
       parameter (nEh     = 100    )       ! number of energy    


       common /QPRAMI/ nqstep
       common /QPRAMR/ timemax, Emin, Emax, dEh, relerr, abserr, autime
     $               , timeunit,rintensity,rintensity0,energy0,eV,debye
     $               , omega_s,gamma_s,s_mu
     $               , omega_q,gamma_q,q_mu,gamma_d,qradius,g_couple            
     $               , pulse_omega_0,pulse_t_0,pulse_alpha
     $               , pulse_duration

       real            timemax, Emin, Emax, dEh, relerr, abserr, autime
     $               , timeunit,rintensity,rintensity0,energy0,eV,debye
     $               , omega_s,gamma_s,s_mu
     $               , omega_q,gamma_q,q_mu,gamma_d,qradius,g_couple            
     $               , pulse_omega_0,pulse_t_0,pulse_alpha
     $               , pulse_duration
       common /QPRAMI/ isstate (nstate)
     $               , iqstate_m (numberOfQuantumDots,nstate)
     $               , iqstate(nstate)
       integer         isstate,iqstate,iqstate_m

       common /QPRAMV/ hamilt_0 (nstate,nstate)
     $               , hamilt   (nstate,nstate)
     $               , hamilt_I (nstate,nstate)
     $               , hamiltp_0 (3*nstate)
     $               , hamiltp   (3*nstate)
     $               , hamiltp_I (3*nstate)
     $               , hamilt_0_m_p((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_m_p((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_I_m_p((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_0_pls((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_pls((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_I_pls((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , hamilt_g_pls((2*numqd**numberOfQuantumDots-1)
     $                        *nstate)
     $               , linblad_r(nstate,nstate)
     $               , linblad_i(nstate,nstate)

       real            hamilt_0 ,hamilt ,hamilt_I
       real            hamiltp_0,hamiltp,hamiltp_I,linblad_i
       real            hamilt_0_m_p,hamilt_m_p,hamilt_I_m_p,linblad_r
       real            hamilt_0_pls,hamilt_pls,hamilt_I_pls,hamilt_g_pls
       common /QPRAMC/ rho      (nstate,nstate)
     $               , drho     (nstate,nstate)
       complex*16      rho, drho

       common /QPRAMW/ rho_r    (nstate,nstate)
     $               , rho_i    (nstate,nstate)
     $               , k_rho_r  (nstate,nstate)
     $               , k_rho_i  (nstate,nstate)
     $               , resrho_r (nstate,nstate)
     $               , resrho_i (nstate,nstate)
     $               , tmp_r1   (nstate,nstate)
     $               , tmp_r2   (nstate,nstate)
     $               , tmp_i1   (nstate,nstate)
     $               , tmp_i2   (nstate,nstate)
     $               , tmp_r3   (nstate,nstate)
     $               , tmp_i3   (nstate,nstate)
       real            rho_r,rho_i,k_rho_r,k_rho_i,resrho_r,resrho_i
       real            tmp_r1,tmp_r2,tmp_i1,tmp_i2,tmp_r3,tmp_i3

       common /QPRAMP/ frequency(nstate,nstate,nEh) 
     $               , omega    (nEh) 
     $               , hb_omega (nEh)
     $               , state_sums(nstate,nstate) 
       real            frequency,omega,hb_omega,state_sums

       common /qarnolV/
     $   qU  (2*nstate*nstate)                   
     $,  qV0 (2*nstate*nstate,larnol+1)
     $,  qV  (2*nstate*nstate,larnol)
     $,  qVt (larnol,2*nstate*nstate)
     $,  qH0 (larnol+1,larnol)
     $,  qH  (larnol,larnol)
     $,  qW  (larnol)
       real qU,qV0,qV,qVt,qH0,qH,qW

       common /qarnolI/ qmarnol
       integer          qmarnol


       common /qarnolW/ qws(2*larnol*(larnol+2))
     $,                 qrwork(2*larnol)
      real              qws,qrwork

      common /qarnolC/  qeval(larnol),qzr(larnol,larnol)
     $               ,  qzri(larnol,larnol)
     $               ,  qzh(larnol,larnol),qzh2(larnol),qzh3(larnol)
     $               ,  qawork(larnol)
      complex*16        qeval,qzri,qzr,qzh,qzh2,qzh3,qawork

      common /qarnolWI/  iqpiv(larnol)
      integer            iqpiv
