# master makefile. Includes elements common to all platforms. Platform-specific information should be put in the appropriate makefile.arch 

###############################################################################
L	= 
S       = $(BASEDIR)/src
J2      = $(BASEDIR)/src/jl2
J       = $(BASEDIR)/src/jl
NETLIB	= $(BASEDIR)/libs/netlib
MOABSRC = $(BASEDIR)/moab   
JL2     = -DPREFIX=jl_
JL      = -DAMG_DUMP
################################################################################
#
# core nekton files ...
#
#
CORE = drive.o cem_dg2.o coef.o connect2.o \
bdry.o edgec.o genxyz.o \
prepost.o speclib.o subs1.o subs2.o subuser.o \
convert.o mat1.o mat2std.o \
genbox.o filter.o\
grad.o cem_opt.o bessel.o randgen.o dumpvtk.o \
main.o dnchbv.o outmesh.o courant.o parameter.o\
byte_mpi.o ic.o hmholtz.o gmres.o\
maxwell.o schrod.o poisson.o

# defaul and overwrite: order is important: system > programming model     
MXM = mxm_std.o mxm_wrapper.o
ifeq ($(BG) ,true)
  MXM = mxm_std.o mxm_wrapper.o bg_aligned3.o bg_mxm44.o bg_mxm44_uneven.o bg_mxm3.o
endif
ifeq ($(OMP),true)
  MXM = mxm_std_omp.o mxm_wrapper.o
endif  
ifeq ($(GPU) ,true)
  MXM = mxm_gpu.o mxm_std_gpu.o mxm_std.o mxm_wrapper.o
endif
MOAB=.true.

# overwrite EXTRALIBS defined in arch-settings: temporary
ifeq ($(MOAB) ,true)
  EXTRALIBS = blas_moab.o dsygv.o imeshutil.o moab.o  ssygv.o imeshcutil.o    
endif

# pff overlapping schwaz 
#
OS =
#outmesh.o 
#fastsa.o 

JL_PREFIX = jl_
JO2 =gs.o sort.o sarray_transfer.o sarray_sort.o gs_local.o \
crystal.o comm.o tensor.o fail.o fcrystal.o findpts.o findpts_local.o \
obbox.o poly.o lob_bnd.o findpts_el_3.o findpts_el_2.o sparse_cholesky.o xxt.o fcrs.o
NJO2=pml2.o dssum2.o connect11.o map22.o byte2.o

JO = $(JL_PREFIX)errmem.o\
$(JL_PREFIX)sort.o\
$(JL_PREFIX)crystal.o\
$(JL_PREFIX)tuple_list.o\
$(JL_PREFIX)transfer.o\
$(JL_PREFIX)fcrystal.o\
$(JL_PREFIX)gs.o\
$(JL_PREFIX)sparse_cholesky.o\
$(JL_PREFIX)poly.o\
$(JL_PREFIX)tensor.o\
$(JL_PREFIX)findpt.o\
$(JL_PREFIX)pfindpt.o

NOBJS = $(CORE) $(MXM) $(OS) $(JO2) $(NJO2) \
        $(JO) $(COMM_BACKEND).o $(IO_BACKEND) $(LAPACK_EXTRA_OBJS) 

LFLAGS=/soft/apps/UPC/lib/libhpm.a

L0 =  $(OPT_OPTIONS) -O0     
L2 =  $(OPT_OPTIONS) -O2    
L3 =  $(OPT_OPTIONS) -O3    
L4 =  $(OPT_OPTIONS) -O4    
HMT   = #-DHPM -Dr8 -DDEBUG -DMPISRC -DSINGLE_DIR # -DBLAS

###
FL0   = $(L0) $(HMT) $(P)
FL2   = $(L2) $(HMT) $(P)
FL3   = $(L3) $(HMT) $(P)
FL4   = $(L4) $(HMT) $(P)

###
DRL0    = $(FL0) # -Mconcur -Mreentrant
DFL0    = $(FL0) # -Mconcur 
DFL2    = $(FL2) # -Mconcur
DFL3    = $(FL3) # -Mconcur 
DFL4    = $(FL4) # -Mconcur -Minfo=loop -Mneginfo=loop

RFL0    = $(FL0) #-Mreentrant
RFL2    = $(FL2) #-Mreentrant
RFL3    = $(FL3) #-Mreentrant
RFL4    = $(FL4) #-Mreentrant

DRFL0   = $(FL0) # -Mconcur -Mreentrant
DRFL2   = $(FL3) # -Mconcur -Mreentrant
DRFL3   = $(FL3) # -Mconcur -Mreentrant
DRFL4   = $(FL4) # -Mconcur -Mreentrant

cFL0   = $(L0) $(HMT)
cFL2   = $(L2) $(HMT)
cFL3   = $(L3) $(HMT)
cFL4   = $(L4) $(HMT)

###

ifeq ($(GPU) ,true)
lFLAGS = $(LAPACK) $(MPI_LIBS) $(EXTRALIBS) $(HPMFLAGS) $(PROFILE_PRELIB) $(PROFILE_INCPATHS) -L/soft/apps/packages/cuda-4.0/cuda/lib64 -lcudart
else
lFLAGS = $(LAPACK) $(MPI_LIBS) $(EXTRALIBS) $(HPMFLAGS) $(PROFILE_PRELIB) $(PROFILE_INCPATHS) 
endif


################################################################################

all : nekcem  print

nekcem:	 $(NOBJS)          
	 $(LD) $(OPT_OPTIONS) -o nekcem $G $(NOBJS) $(lFLAGS) 
# -Bstatic

print: nekcem  
	@if which size &> /dev/null ; then size nekcem ; fi
	@echo "I am done" 

clean:
	rm *.o nekcem  


################################################################################
# fortran source files
################################################################################
drive.o		:$S/drive.F;		$(F77) -c $(FL2) $<            
prepost.o	:$S/prepost.F;		$(F77) -c $(FL2) $<
connect2.o	:$S/connect2.F;		$(F77) -c $(FL2) $<
edgec.o		:$S/edgec.F;		$(F77) -c $(FL2) $<
ginterface.o	:$S/ginterface.F;	$(F77) -c $(FL2) $<
genxyz.o	:$S/genxyz.F;		$(F77) -c $(FL2) $<
genbox.o	:$S/genbox.F;		$(F77) -c $(FL2) $<
dumpvtk.o	:$S/dumpvtk.F;		$(F77) -c $(FL2) $<
beam.o	        :$S/beam.F;	        $(F77) -c $(FL2) $<
wake.o	        :$S/wake.F;	        $(F77) -c $(FL2) $<
movwin.o        :$S/movwin.F;	        $(F77) -c $(FL2) $<
filter.o        :$S/filter.F;	        $(F77) -c $(FL2) $<
parameter.o     :$S/parameter.F;        $(F77) -c $(FL2) $<
courant.o       :$S/courant.F;	        $(F77) -c $(FL2) $<
subs1.o		:$S/subs1.F;		$(F77) -c $(FL2) $<
subs2.o		:$S/subs2.F;		$(F77) -c $(FL2) $<
turb.o		:$S/turb.F;		$(F77) -c $(FL2) $<
mvmesh.o	:$S/mvmesh.F;		$(F77) -c $(FL2) $<
reverf.o	:$S/reverf.F;		$(F77) -c $(FL2) $<
################################################################################
bdry.o		:$S/bdry.F;		$(F77) -c $(FL2) $<
commcube.o	:$S/commcube.F;		$(F77) -c $(FL2) $<
comm_seq.o	:$S/comm_seq.F;		$(F77) -c $(FL2) $<
byte_mpi.o      :$S/byte_mpi.F;         $(F77) -c $(FL2) $<
subuser.o	:$S/subuser.F;		$(F77) -c $(FL2) $<
ic.o		:$S/ic.F;		$(F77) -c $(FL2) $<
conduct.o	:$S/conduct.F;		$(F77) -c $(FL2) $<
col2a.o		:$S/col2a.s;		$(F77) -c $(FL2) $<
col3a.o		:$S/col3a.s;		$(F77) -c $(FL2) $<
add2a.o		:$S/add2a.s;		$(F77) -c $(FL2) $<
add3a.o		:$S/add3a.s;		$(F77) -c $(FL2) $<
convert.o	:$S/convert.F;		$(F77) -c $(FL2) $<
outmesh.o	:$S/outmesh.F;		$(F77) -c $(FL2) $<
navier0.o	:$S/navier0.F;		$(F77) -c $(FL2) $<
navier2.o	:$S/navier2.F;		$(F77) -c $(FL2) $<
navier3.o	:$S/navier3.F;		$(F77) -c $(FL2) $<
navier4.o	:$S/navier4.F;		$(F77) -c $(FL2) $<
navier5.o	:$S/navier5.F;		$(F77) -c $(FL2) $<
navier6.o	:$S/navier6.F;		$(F77) -c $(FL2) $<
navier7.o	:$S/navier7.F;		$(F77) -c $(FL2) $<
navier8.o	:$S/navier8.F;		$(F77) -c $(FL2) $<
speclib.o	:$S/speclib.F;		$(F77) -c $(FL2) $<
calcz.o		:$S/calcz.F;		$(F77) -c $(FL2) $<
fast3d.o	:$S/fast3d.F;		$(F77) -c $(FL2) $<
util_pc.o       :$S/util_pc.F;		$(F77) -c $(FL2) $<
qqt.o           :$S/qqt.F;		$(F77) -c $(FL2) $<
hmholtz_pc.o    :$S/hmholtz_pc.F;	$(F77) -c $(FL2) $<
operator.o      :$S/operator.F;		$(F77) -c $(FL2) $<
setup_pc1.o     :$S/setup_pc1.F;	$(F77) -c $(FL2) $<
setup_pc2.o     :$S/setup_pc2.F;	$(F77) -c $(FL2) $<
################################################################################
dssmr.o		:$S/dssmr.F;		$(F77) -c $(FL3) $<
dssm0.o		:$S/dssm0.F;		$(F77) -c $(FL3) $<
eigsolv.o	:$S/eigsolv.F;		$(F77) -c $(FL3) $<
hmh_dg.o	:$S/hmh_dg.F;		$(F77) -c $(FL3) $<
cem_opt.o	:$S/cem_opt.F;		$(F77) -c $(FL3) $<
randgen.o	:$S/randgen.F;		$(F77) -c $(FL3) $<
bessel.o	:$S/bessel.F;		$(F77) -c $(FL3) $<
dnchbv.o	:$S/dnchbv.F;		$(F77) -c $(FL3) $<
grad.o		:$S/grad.F;		$(F77) -c $(FL3) $<
gfdm_par.o	:$S/gfdm_par.F;		$(F77) -c $(FL3) $<
gfdm_solve.o	:$S/gfdm_solve.F;	$(F77) -c $(FL3) $<
gfdm_op.o	:$S/gfdm_op.F;		$(F77) -c $(FL3) $<
gauss.o		:$S/gauss.F;		$(F77) -c $(FL3) $<
planx.o		:$S/planx.F;		$(F77) -c $(FL3) $<
ssolv.o		:$S/ssolv.F;		$(F77) -c $(FL3) $<
mperre.o	:$S/mperre.F;		$(F77) -c $(FL3) $<
per2.o          :$S/per2.F;             $(F77) -c $(FL3) $<
################################################################################
coef.o		:$S/coef.F;		$(F77) -c $(FL4) $<
hsmg.o		:$S/hsmg.F;		$(F77) -c $(FL4) $<
uzawa_gmres.o	:$S/uzawa_gmres.F;	$(F77) -c $(FL4) $<
mat1.o		:$S/mat1.F;		$(F77) -c $(FL4) $<
mat2.o		:$S/mat2.F;		$(F77) -c $(FL4) $<
mat2std.o	:$S/mat2std.F;		$(F77) -c $(FL4) $<
xxt_tools.o     :$S/xxt_tools.F;        $(F77) -c $(FL4) $<

################################################################################
# NETLIB
################################################################################
blas.o          :$(NETLIB)/blas.f;      $(F77) -c $(FL4) $<
lapack.o        :$(NETLIB)/lapack.f;    $(F77) -c $(FL4) $<
arpack.o        :$(NETLIB)/arpack.f;    $(F77) -c $(FL4) $<


################################################################################
#reentrant modules
################################################################################
#mxm.o		:$S/mxm.F;		$(F77) -c $(RFL4) $<
mxm44.o		:$S/mxm44.F;		$(F77) -c $(RFL4) $<
mxm44f2.o	:$S/mxm44f2.F;		$(F77) -c $(RFL4) $<
hmholtza.o	:$S/hmholtza.F;		$(F77) -c $(RFL4) $<
navier1a.o	:$S/navier1a.F;		$(F77) -c $(RFL4) $<
fastsa.o	:$S/fastsa.F;		$(F77) -c $(RFL4) $<
################################################################################


################################################################################
#dual mode modules
################################################################################
hmholtz.o	:$S/hmholtz.F;		$(F77) -c $(DFL4) $<
gmres.o 	:$S/gmres.F;  		$(F77) -c $(DFL4) $<
navier1.o	:$S/navier1.F;		$(F77) -c $(DFL4) $<
fasts.o		:$S/fasts.F;		$(F77) -c $(DFL4) $<
fasts2.o	:$S/fasts2.F;		$(F77) -c $(RFL4) $<
#subuser.o	:$S/subuser.F;		$(F77) -c $(FL2) $<
################################################################################
################################################################################
# c source files
################################################################################
################################################################################
main.o		:$S/main.c;		$(CC)  -c $(cFL3) $<
revert.o        :$S/revert.c;           $(CC)  -c $(cFL3) $<
io_util.o       :$S/io_util.c;          $(CC)  -c $(cFL3) $<
mpiio_util.o    :$S/mpiio_util.c;       $(CC)  -c $(cFL3) $<
vtkbin.o        :$S/vtkbin.c;           $(CC)  -c $(cFL3) $<
rbIO_nekcem.o   :$S/rbIO_nekcem.c;      $(CC)  -c $(cFL3) $<
coIO_nekcem.o   :$S/coIO_nekcem.c;      $(CC)  -c $(cFL3) $<
io_driver.o     :$S/io_driver.c;        $(CC)  -c $(cFL3) $<
hmt_perf.o      :$S/hmt_perf.c;         $(CC)  -c -I$D $(cFL3) -I$L/include $<
coIO_nekcem_read.o   :$S/coIO_nekcem_read.c;      $(CC)  -c $(cFL3) $<
################################################################################
flush_hack.o    :$S/flush_hack.c;       $(CC)  -c -I$D -I$L/include $(cFL4) $<
mpi_hack.o      :$S/mpi_hack.c;         $(CC)  -c -I$D -I$L/include $(cFL4) $<
################################################################################
# MXM
mxm_gpu.o       :$S/mxm_gpu.cu;               nvcc -arch=sm_20 -c $<    
mxm_std_gpu.o   :$S/mxm_std_gpu.F;            $(F77) -c $(FL4) $<       
mxm_std_omp.o   :$S/mxm_std_omp.F;            $(F77) -c $(FL4) $<       
mxm_wrapper.o   :$S/mxm_wrapper.F;            $(F77) -c $(FL2) $<        
mxm_std.o       :$S/mxm_std.F;                $(F77) -c $(FL4) $<       
k10_mxm.o       :$S/k10_mxm.c;                $(CC)  -c $(cFL2) $<            
bg_aligned3.o   :$S/bg_aligned3.s;            $(CC) -c $< 
bg_mxm3.o       :$S/bg_mxm3.s;                $(CC) -c $< 
bg_mxm44.o      :$S/bg_mxm44.s;               $(CC) -c $< 
bg_mxm44_uneven.o :$S/bg_mxm44_uneven.s;      $(CC) -c $<
#
################################################################################
cem_dg2.o	:$S/cem_dg2.F;		$(F77) -c $(FL3) $<
maxwell.o	:$S/maxwell.F;		$(F77) -c $(FL3) $<
schrod.o 	:$S/schrod.F;		$(F77) -c $(FL3) $<
pml2.o          :$S/pml2.F;		$(F77) -c $(FL3) $<
poisson2d2.o	:$S/poisson2d2.F;	$(F77) -c $(FL2) $<
poisson.o   	:$S/poisson.F;	        $(F77) -c $(FL2) $<
dssum2.o	:$S/dssum2.F;		$(F77) -c $(FL3) $<
connect11.o	:$S/connect11.F;	$(F77) -c $(DFL4) $<
map22.o         :$S/map22.F;		$(F77) -c $(DFL4) $<
comm_mpi2.o	:$S/comm_mpi2.F;	$(F77) -c $(FL2) $<
byte2.o         :$S/byte2.c;             $(CC)  -c $(cFL3) $<
xxt.o           :$(J2)/xxt.c;             $(CC) -c $(cFL2) $(JL2) $< 
comm.o          :$(J2)/comm.c;            $(CC) -c $(cFL2) $(JL2) $< 
gs.o            :$(J2)/gs.c;              $(CC) -c $(cFL2) $(JL2) $< 
fail.o            :$(J2)/fail.c;            $(CC) -c $(cFL2) $(JL2) $< 
tensor.o          :$(J2)/tensor.c;          $(CC) -c $(cFL2) $(JL2) $< 
sort.o            :$(J2)/sort.c;            $(CC) -c $(cFL2) $(JL2) $<
sarray_sort.o     :$(J2)/sarray_sort.c;     $(CC) -c $(cFL2) $(JL2) $<
crystal.o         :$(J2)/crystal.c;         $(CC) -c $(cFL2) $(JL2) $<
sarray_transfer.o :$(J2)/sarray_transfer.c; $(CC) -c $(cFL2) $(JL2) $< 
fcrystal.o        :$(J2)/fcrystal.c;        $(CC) -c $(cFL2) $(JL2) $< 
gs_local.o        :$(J2)/gs_local.c;        $(CC) -c $(cFL2) $(JL2) $< 
fcrs.o            :$(J2)/fcrs.c;            $(CC) -c $(cFL2) $(JL2) $< 
sparse_cholesky.o :$(J2)/sparse_cholesky.c; $(CC) -c $(cFL2) $(JL2) $< 
findpts.o         :$(J2)/findpts.c;         $(CC) -c $(cFL2) $(JL2) $< 
findpts_local.o   :$(J2)/findpts_local.c;   $(CC) -c $(cFL2) $(JL2) $< 
obbox.o           :$(J2)/obbox.c;           $(CC) -c $(cFL2) $(JL2) $< 
poly.o            :$(J2)/poly.c;            $(CC) -c $(cFL2) $(JL2) $< 
lob_bnd.o         :$(J2)/lob_bnd.c;         $(CC) -c $(cFL2) $(JL2) $< 
findpts_el_3.o    :$(J2)/findpts_el_3.c;    $(CC) -c $(cFL2) $(JL2) $<
findpts_el_2.o    :$(J2)/findpts_el_2.c;    $(CC) -c $(cFL2) $(JL2) $< 
$(JL_PREFIX)errmem.o           :$(J)/errmem.c;             $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)sort.o             :$(J)/sort.c;               $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)crystal.o          :$(J)/crystal.c;            $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)tuple_list.o       :$(J)/tuple_list.c;         $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)transfer.o         :$(J)/transfer.c;           $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)fcrystal.o         :$(J)/fcrystal.c;           $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)gs.o               :$(J)/gs.c;                 $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)sparse_cholesky.o  :$(J)/sparse_cholesky.c;    $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)xxt.o              :$(J)/xxt.c;                $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)poly.o             :$(J)/poly.c;               $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)tensor.o           :$(J)/tensor.c;             $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)findpt.o           :$(J)/findpt.c;             $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)pfindpt.o          :$(J)/pfindpt.c;            $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)findpts.o          :$(J)/findpts.c;            $(CC) -c $(cFL2) $(JL) $< -o $@
$(JL_PREFIX)amg.o              :$(J)/amg.c;                $(CC) -c $(cFL2) $(JL) $< -o $@
blas_moab.o                    :$(MOABSRRC)/blas_moab.f;   $(F77) -c $(FL3) $<
dsygv.o                        :$(MOABSRRC)/dsygv.f;       $(F77) -c $(FL3) $<
imeshutil.o                    :$(MOABSRRC)/imeshutil.f;   $(F77) -c $(FL3) $<
moab.o                         :$(MOABSRRC)/moab.f;        $(F77) -c $(FL3) $<
ssygv.o                        :$(MOABSRRC)/ssygv.f;       $(F77) -c $(FL3) $<
imeshcutil.o                   :$(MOABSRRC)/imeshcutil.c;  $(CC)  -c $(cFL3) $<
