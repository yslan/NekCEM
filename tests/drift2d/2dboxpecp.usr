c-----------------------------------------------------------------------
c
c  USER SPECIFIED ROUTINES:
c
c     - boundary conditions
c     - initial conditions
c     - variable properties
c     - forcing function for fluid (f)
c     - forcing function for passive scalar (q)
c     - general purpose routine for checking errors etc.
c
c-----------------------------------------------------------------------
      subroutine userinc
c-----------------------------------------------------------------------

      return
      end
c-----------------------------------------------------------------------
      subroutine userini(tt,mycn,mycp,myce,myex,myey,myez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'DRIFT'
      include 'POISSON'

      real tt
      real mycn(lx1*ly1*lz1*lelt)
      real mycp(lx1*ly1*lz1*lelt)
      real myce(lx1*ly1*lz1*lelt)
      real myex(lx1*ly1*lz1*lelt)
      real myey(lx1*ly1*lz1*lelt)
      real myez(lx1*ly1*lz1*lelt)
      real xx,yy,tmp
      integer i

c.... specific for this problem
      tt=1.0 

      do i = 1,npts    
         xx = xm1(i,1,1,1)
         yy = ym1(i,1,1,1)
         tmp = sin(pi*xx)*sin(tt)
         mycn(i) = tmp**2      ! cN or potent
         mycp(i) = 2.0*tmp**2  ! cP
         myce(i) = 0.0              
         myex(i) = 0.0             
         myey(i) = 0.0             
         myez(i) = 0.0             
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usersol(tt,myscn,myscp,mysce,mysex,mysey,mysez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'DRIFT'

      real tt
      real myscn(lx1*ly1*lz1*lelt)
      real myscp(lx1*ly1*lz1*lelt)
      real mysce(lx1*ly1*lz1*lelt)
      real mysex(lx1*ly1*lz1*lelt)
      real mysey(lx1*ly1*lz1*lelt)
      real mysez(lx1*ly1*lz1*lelt)

      real xx,yy,tmp
      integer i

      do i = 1,npts 
         xx = xm1(i,1,1,1)
         yy = ym1(i,1,1,1)
         tmp = sin(pi*xx)*sin(tt)     
         myscn(i) = tmp**2     ! cN or potent
         myscp(i) = 2.0*tmp**2 ! cP
         mysce(i) = 0.0        ! dummy
         mysex(i) = 0.0        ! dummy
         mysey(i) = 0.0        ! dummy
         mysez(i) = 0.0        ! dummy
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usersrc (tt,rhs_cn,rhs_cp,rhs_ce,rhs_phi,dumm1,dumm2)     
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'DRIFT'
      include 'POISSON'
      include 'BCS'

      real tt
      real sinx,cosx2,sinx2,sint2,dudx,dudy,uu
      real tmp1,tmp2,tmp3,tmp4

      real rhs_cn(1),rhs_cp(1),rhs_ce(1),rhs_phi(1)
      real nbc_cn(lx1*ly1*lz1*lelt)
      real nbc_cp(lx1*ly1*lz1*lelt)
      real nbc_ce(lx1*ly1*lz1*lelt)
      real nbc_phi(lx1*ly1*lz1*lelt)
      real dumm1(lx1*ly1*lz1*lelt)
      real dumm2(lx1*ly1*lz1*lelt)

      integer i,j

      real xx,yy,pi2
      real ttp,ttc,time_previous,time_next

      time_previous= tt
      time_next    = tt + dt
  
c...  Source for potential field (phi) at time
      ttp = time_previous
      do i = 1,npts
         xx = xm1(i,1,1,1)
         yy = ym1(i,1,1,1)

         sint2 = sin(ttp)**2
         cosx2 = cos(2.0*pi*xx)
         sinx = sin(pi*xx)

         tmp1 = sinx**2*sint2   ! u
         tmp2 = -2.0*pi**2*sint2*cosx2
         tmp3 = tmp2-charge(i)*tmp1
         rhs_phi(i) = charge(i)*(cP(i)-cN(i))
         rhs_phi(i) = rhs_phi(i)+tmp3
      enddo

      call col2(rhs_phi,bmn,npts)

c     Source for c_n,c_p,c_e at time+dt
      ttc= time_next 

      pi2 = 2.*pi*pi
      do i=1,npts
         xx = xm1(i,1,1,1)
         yy = ym1(i,1,1,1)
         sint2 = sin(ttc)**2
         sinx = sin(pi*xx)
         sinx2 = sin(2.0*pi*xx)
         cosx2 = cos(2.0*pi*xx)
         uu = (sinx**2)*sint2
         dudx = pi*sinx2 *sint2
         dudy = 0.d0

         tmp1 = sin(2.0*tt)*sinx**2 ! dudt
         tmp2 = -pi2*sin(tt)**2*cosx2 !-laplace(u)
         tmp3 = (dudx**2+dudy**2) ! grad(phi)*grad(u)
         tmp4 = uu*(-tmp2)      ! u*laplace(phi)

         rhs_cn(i) = tmp1+tmp2+tmp3+tmp4
         rhs_cp(i) = (tmp1+tmp2-tmp3-tmp4)*2.0
         rhs_ce(i) =  0.0

      enddo
      call col2(rhs_cN,bmn,npts)
      call col2(rhs_cP,bmn,npts)

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,iel)
c---------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'DRIFT'
      include 'POISSON'

c     if (nid.eq.0) write(6,*) 'this is nondimension unit'  

      call rone (diff_n,npts)
      call rone (diff_p,npts)
      call rone (diff_e,npts)

      call rone (mu_n  ,npts)
      call rone (mu_p  ,npts)
      call rone (mu_e  ,npts)

      call rone (  ni  ,npts)
      call rone (charge,npts)

      call rone(d_permit,npts)
      call rone(d_permea,npts)

c     if (nid.eq.0) write(6,*) 'define material properties'

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'

      real rscale
      real xmin,ymin,zmin,xmax,ymax,zmax

      n = nx1*ny1*nz1*nelt

      xmin = glmin(xm1,n)
      xmax = glmax(xm1,n)
      ymin = glmin(ym1,n)
      ymax = glmax(ym1,n)
      zmin = glmin(zm1,n)
      zmax = glmax(zm1,n)

      rscale = 0.02
      sx = 100.0*rscale/(xmax-xmin)
      sy = 100.0*rscale/(ymax-ymin)

      do i = 1,n
         xm1(i,1,1,1) = sx*(xm1(i,1,1,1)-xmin)-1.0
         ym1(i,1,1,1) = sy*(ym1(i,1,1,1)-ymin)-1.0
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'DRIFT'
      include 'POISSON'
      include 'RTIMER'

      integer i
      real l2(6),linf(6)
      real l2tol(6),linftol(6)
      real dummy(lx1*ly1*lz1*lelt)

      l2(1) = 0.0
      l2(2) = 0.0
      l2(3) = 0.0
      l2(4) = 0.0
      l2(5) = 0.0
      l2(6) = 0.0

      linf(1) = 0.0
      linf(2) = 0.0
      linf(3) = 0.0
      linf(4) = 0.0
      linf(5) = 0.0
      linf(6) = 0.0

      l2tol(1) = 5e-9
      l2tol(2) = 5e-9
      l2tol(3) = 0.0
      l2tol(4) = 5e-10
      l2tol(5) = 0.0
      l2tol(6) = 0.0

      linftol(1) = 5e-9
      linftol(2) = 5e-9
      linftol(3) = 0.0
      linftol(4) = 5e-10
      linftol(5) = 0.0
      linftol(6) = 0.0

      if (istep.le.10.or.mod(istep,iocomm).eq.0) then
         call usersol(time,scn,scp,sce,dummy,dummy,dummy)
         call usersol(time-dt,spotent,dummy,dummy,dummy,dummy,dummy)

         call cem_error(cN,scN,errN,npts,l2(1),linf(1))
         call cem_error(cP,scP,errP,npts,l2(2),linf(2))
         call cem_error(potent,spotent,epotent,npts,l2(4),linf(4))

         call userprint(istep,time,dt,l2,linf,cpu_t,cpu_p_t)

         if (istep.eq.nsteps) then
            do i = 1,6
               if (l2(i).gt.l2tol(i)) call exitt(1)
               if (linf(i).gt.linftol(i)) call exitt(1)
            enddo
         endif
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userprint(istep,tt,dt,l2,linf,t1,t2)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      integer istep
      real tt,dt,t1,t2
      real l2(6),linf(6)

      integer k

      if (nid.eq.0) then
         write(6,101) istep,nelt,nx1-1,npts,tt,dt,(l2(k),k=1,6),t1,t2
         write(6,102) istep,nelt,nx1-1,npts,tt,dt,(linf(k),k=1,6),t1,t2
      endif

 101  format(/,i10,i6,i4,i9,1p9e10.3,e9.2,' CPU: L2')
 102  format(  i10,i6,i4,i9,1p9e10.3,e9.2,' CPU: Linf')

      return
      end
