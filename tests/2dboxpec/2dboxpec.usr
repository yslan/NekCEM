c-----------------------------------------------------------------------
c
c     Box geometry with a perfect electrical conductor on the boundary.
c
c-----------------------------------------------------------------------
      subroutine userinc
c-----------------------------------------------------------------------
      return
      end
c-----------------------------------------------------------------------
      subroutine usersol(tt, myshx, myshy, myshz, mysex, mysey, mysez)
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'
      include 'GEOMBOUND'

      real tt
      real myshx(lx1,ly1,lz1,lelt)
      real myshy(lx1,ly1,lz1,lelt)
      real myshz(lx1,ly1,lz1,lelt)
      real mysex(lx1,ly1,lz1,lelt)
      real mysey(lx1,ly1,lz1,lelt)
      real mysez(lx1,ly1,lz1,lelt)

      real omega,tmph,tmpe
      real xx,yy,zz,u
      integer i,j,k,e,ii,ind

      if (.not.ifpec) then
         write(6,*) 'ERROR:: this .usr file is for PEC boundary'
         call exitt
      endif

      if (ndim.eq.3) then
         ww = 1.0*pi
         omega = 2.0
         omega = sqrt(omega)
         tmph = sin(ww*omega*tt)/omega
         tmpe = cos(ww*omega*tt)

         do i = 1,nx1*ny1*nz1*nelt
            xx = xm1(i,1,1,1)
            yy = ym1(i,1,1,1)
            zz = zm1(i,1,1,1)

            myshx(i,1,1,1) = cos(ww*xx)*sin(ww*yy)*tmph
            myshy(i,1,1,1) = -sin(ww*xx)*cos(ww*yy)*tmph
            myshz(i,1,1,1) = 0.0
            mysex(i,1,1,1) = 0.0
            mysey(i,1,1,1) = 0.0
            mysez(i,1,1,1) = cos(ww*xx)*cos(ww*yy)*tmpe
         enddo
      else
         ww = 1.5*pi
         omega = 2.0
         omega = sqrt(omega)
         tmph = sin(ww*omega*tt)/omega
         tmpe = cos(ww*omega*tt)

         if (iftm) then
            do i = 1,nx1*ny1*nz1*nelt
               xx = xm1(i,1,1,1)
               yy = ym1(i,1,1,1)
               zz = zm1(i,1,1,1)

               myshx(i,1,1,1) = cos(ww*xx)*sin(ww*yy)*tmpH
               myshy(i,1,1,1) = -sin(ww*xx)*cos(ww*yy)*tmpH
               myshz(i,1,1,1) = 0.0
               mysex(i,1,1,1) = 0.0
               mysey(i,1,1,1) = 0.0
               mysez(i,1,1,1) = cos(ww*xx)*cos(ww*yy)*tmpE
            enddo
         elseif (ifte) then
            do i = 1,nx1*ny1*nz1*nelt
               xx = xm1(i,1,1,1)
               yy = ym1(i,1,1,1)
               zz = zm1(i,1,1,1)

               myshx(i,1,1,1) = 0.0
               myshy(i,1,1,1) = 0.0
               myshz(i,1,1,1) = sin(ww*xx)*sin(ww*yy)*tmpE
               mysex(i,1,1,1) = sin(ww*xx)*cos(ww*yy)*tmpH
               mysey(i,1,1,1) = -cos(ww*xx)*sin(ww*yy)*tmpH
               mysez(i,1,1,1) = 0.0
            enddo
         else
            call exitt
         endif
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine usersrc(baseidx,srchx,srchy,srchz,srcex,srcey,srcez)
c-----------------------------------------------------------------------
      return
      end
c-----------------------------------------------------------------------
      subroutine userini(tt, myhx, myhy, myhz, myex, myey, myez)
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      real tt
      real myhx(lx1,ly1,lz1,lelt)
      real myhy(lx1,ly1,lz1,lelt)
      real myhz(lx1,ly1,lz1,lelt)
      real myex(lx1,ly1,lz1,lelt)
      real myey(lx1,ly1,lz1,lelt)
      real myez(lx1,ly1,lz1,lelt)

      call usersol(tt,myhx, myhy, myhz, myex, myey, myez)

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp(ix,iy,iz,iel)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

c     These don't do anything! This is a temporary measure until
c
c     https://github.com/NekCEM/NekCEM/issues/12
c
c     is resolved.
      integer ix,iy,iz,iel

      integer i

      do i = 1,npts
         permittivity(i) = 1.0
         permeability(i) = 1.0
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
c-----------------------------------------------------------------------
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      integer i,n
      real sx,sy,sz
      real glmin,glmax
      real xmin,ymin,zmin
      real xmax,ymax,zmax

      n = nx1*ny1*nz1*nelt

      xmin = glmin(xm1,n)
      xmax = glmax(xm1,n)
      ymin = glmin(ym1,n)
      ymax = glmax(ym1,n)
      zmin = glmin(zm1,n)
      zmax = glmax(zm1,n)

      sx = 2.0/(xmax-xmin)
      sy = 2.0/(ymax-ymin)
      if (if3d) sz = 2.0/(zmax-zmin)

      if (if3d) then
         do i = 1,n
            xm1(i,1,1,1) = sx*xm1(i,1,1,1)
            ym1(i,1,1,1) = sy*ym1(i,1,1,1)
            zm1(i,1,1,1) = sz*zm1(i,1,1,1)
         enddo
      else
         do i = 1,n
            xm1(i,1,1,1) = sx*(xm1(i,1,1,1)-xmin)-1
            ym1(i,1,1,1) = sy*(ym1(i,1,1,1)-ymin)-1
         enddo
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      common /ccpu/  cpu_t,cpu_dtime,cpu_chk
      real cpu_t,cpu_dtime,cpu_chk

      integer i
      real l2(6),linf(6)
      real l2tol(6),linftol(6)
      real cpu_p_t

      l2tol(1) = 0.0
      l2tol(2) = 0.0
      l2tol(3) = 1e-6
      l2tol(4) = 1e-6
      l2tol(5) = 1e-6
      l2tol(6) = 0.0

      linftol(1) = 0.0
      linftol(2) = 0.0
      linftol(3) = 1e-5
      linftol(4) = 1e-5
      linftol(5) = 1e-5
      linftol(6) = 0.0

      if (istep.le.10.or.mod(istep,iocomm).eq.0) then
         call usersol
     $     (time,shn(1,1),shn(1,2),shn(1,3),sen(1,1),sen(1,2),sen(1,3))

         call cem_error(hn(1,1),shn(1,1),errhn(1,1),npts,l2(1),linf(1))
         call cem_error(hn(1,2),shn(1,2),errhn(1,2),npts,l2(2),linf(2))
         call cem_error(hn(1,3),shn(1,3),errhn(1,3),npts,l2(3),linf(3))
         call cem_error(en(1,1),sen(1,1),erren(1,1),npts,l2(4),linf(4))
         call cem_error(en(1,2),sen(1,2),erren(1,2),npts,l2(5),linf(5))
         call cem_error(en(1,3),sen(1,3),erren(1,3),npts,l2(6),linf(6))

         call userprint(istep,time,dt,l2,linf,cpu_t,cpu_p_t)

         do i = 1,6
            if (l2(i).gt.l2tol(i)) stop 1
            if (linf(i).gt.linftol(i)) stop 1
         enddo
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userprint(istep,tt,dt,l2,linf,t1,t2)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      integer istep
      real tt,dt,t1,t2
      real l2(6),linf(6)

      integer k

      if (nid.eq.0) then
         write(6,101) istep,nelt,nx1-1,npts,tt,dt,(l2(k),k=1,6),t1,t2
         write(6,102) istep,nelt,nx1-1,npts,tt,dt,(linf(k),k=1,6),t1,t2
      endif

 101  format(/,i10,i6,i4,i9,1p9e10.3,e9.2,'CPU: L2')
 102  format(  i10,i6,i4,i9,1p9e10.3,e9.2,'CPU: Linf')

      return
      end
c-----------------------------------------------------------------------
