c-----------------------------------------------------------------------
c
c  USER SPECIFIED ROUTINES:
c
c     - boundary conditions
c     - initial conditions
c     - variable properties
c     - forcing function for fluid (f)
c     - forcing function for passive scalar (q)
c     - general purpose routine for checking errors etc.
c
c-----------------------------------------------------------------------
      subroutine userinc
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      return
      end
c-----------------------------------------------------------------------
      subroutine usersol(tt, myshx, myshy, myshz, mysex, mysey, mysez)
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'
      include 'GEOMBOUND'

      real tt
      real myshx(lx1,ly1,lz1,lelt)
      real myshy(lx1,ly1,lz1,lelt)
      real myshz(lx1,ly1,lz1,lelt)
      real mysex(lx1,ly1,lz1,lelt)
      real mysey(lx1,ly1,lz1,lelt)
      real mysez(lx1,ly1,lz1,lelt)

      real     omega, tmpH, tmpE
      real     xx, yy, zz, u    
      integer  i, j, k, e, ii, ind                 

      if (.not.ifpec) then
         write(6,*) 'ERROR:: this .usr file is for PEC boundary'
         call exitt
      endif

      if (ndim.eq.3) then

        ww    = 1*pi                       

        omega = 2                                
        omega = sqrt(omega)

        tmpH=sin(ww*omega*tt)/omega
        tmpE=cos(ww*omega*tt)   

        do i=1,nx1*ny1*nz1*nelt
          xx=XM1(i,1,1,1)
          yy=YM1(i,1,1,1)
          zz=ZM1(i,1,1,1)

          ! cheater...
          myshx(i,1,1,1) =  cos(ww*xx)*sin(ww*yy)*tmpH  
          myshy(i,1,1,1) = -sin(ww*xx)*cos(ww*yy)*tmpH  
          myshz(i,1,1,1) =  0.0
          mysex(i,1,1,1) =  0.0
          mysey(i,1,1,1) =  0.0
          mysez(i,1,1,1) =  cos(ww*xx)*cos(ww*yy)*tmpE  
        enddo

      else 

        ww    = 1.5*pi                       

        omega = 2                                
        omega = sqrt(omega)

        tmpH=sin(ww*omega*tt)/omega
        tmpE=cos(ww*omega*tt)   

        if (iftm) then
          do i=1,nx1*ny1*nz1*nelt
            xx=XM1(i,1,1,1)
            yy=YM1(i,1,1,1)
            zz=ZM1(i,1,1,1)

            myshx(i,1,1,1) =  cos(ww*xx)*sin(ww*yy)*tmpH  
            myshy(i,1,1,1) = -sin(ww*xx)*cos(ww*yy)*tmpH  
            myshz(i,1,1,1) =  0.0
            mysex(i,1,1,1) =  0.0
            mysey(i,1,1,1) =  0.0
            mysez(i,1,1,1) =  cos(ww*xx)*cos(ww*yy)*tmpE  
          enddo

        elseif (ifte) then

          do i=1,nx1*ny1*nz1*nelt
            xx=XM1(i,1,1,1)
            yy=YM1(i,1,1,1)
            zz=ZM1(i,1,1,1)

            myshx(i,1,1,1) =   0.0
            myshy(i,1,1,1) =   0.0
            myshz(i,1,1,1) =  sin(ww*xx)*sin(ww*yy)*tmpE   
            mysex(i,1,1,1) =  sin(ww*xx)*cos(ww*yy)*tmpH  
            mysey(i,1,1,1) = -cos(ww*xx)*sin(ww*yy)*tmpH  
            mysez(i,1,1,1) =   0.0
          enddo

        else
          call exitt
        endif
      endif

      return
      end

c-----------------------------------------------------------------------
      subroutine usersrc(baseidx,srchx,srchy,srchz,srcex,srcey,srcez)

      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'


      return
      end
c-----------------------------------------------------------------------
      subroutine userini(tt, myhx, myhy, myhz, myex, myey, myez)
c-----------------------------------------------------------------------
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      real tt
      real myhx(lx1,ly1,lz1,lelt)
      real myhy(lx1,ly1,lz1,lelt)
      real myhz(lx1,ly1,lz1,lelt)
      real myex(lx1,ly1,lz1,lelt)
      real myey(lx1,ly1,lz1,lelt)
      real myez(lx1,ly1,lz1,lelt)

      call usersol(tt,myhx, myhy, myhz, myex, myey, myez)

      return
      end

c-----------------------------------------------------------------------

      subroutine uservp (ix,iy,iz,iel)
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      integer  n, ix, iy, iz, ieg
      real     one, xcc, ycc, zcc, x1, y1, z1
      real     lambda, fc, wc                     

      call usermedia   (ix,iy,iz,iel)

      if (IFDRUDE)  call userdrude (ix,iy,iz,iel)

      return
      end

c-----------------------------------------------------------------------

      subroutine usermedia(ix,iy,iz,iel) ! Vector form of userf
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      integer  n, ix, iy,iz, ieg
      real     one, xcc, ycc, zcc, x1, y1, z1
      real     lambda, fc, wc                     

      udiff  = 0.
      utrans = 0.

      permea = permea_0             
      permit = permit_0                

      return
      end

c-----------------------------------------------------------------------
      subroutine userdrude(ix,iy,iz,iel) ! Vector form of userf

      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      return
      end

c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer ix, iy, iz, ieg
C
      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
C
      qvol   = 0.0
      source = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
C

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux=0.0
      uy=0.0
      uz=0.0
      temp=0.0

      return
      end

c-----------------------------------------------------------------------
      subroutine usrdat

      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      return
      end

c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'
      include 'NEKUSE'

      n    = nx1*ny1*nz1*nelt

c     ifxyo= .true.

      xmin = glmin(xm1,n)
      xmax = glmax(xm1,n)
      ymin = glmin(ym1,n)
      ymax = glmax(ym1,n)
      zmin = glmin(zm1,n)
      zmax = glmax(zm1,n)

      !if (nid.eq.0) write(6,*) wavenumber,' This is wavenumber'


      sx = 2.0/(xmax-xmin)
      sy = 2.0/(ymax-ymin)       
      if (if3d) sz = 2.0/(zmax-zmin)            

      if (if3d) then

      do i=1,n
         xm1(i,1,1,1) = sx*xm1(i,1,1,1)                
         ym1(i,1,1,1) = sy*ym1(i,1,1,1)                        
         zm1(i,1,1,1) = sz*zm1(i,1,1,1)
      enddo

      else

      do i=1,n
         xm1(i,1,1,1) = sx*(xm1(i,1,1,1)-xmin)-1
         ym1(i,1,1,1) = sy*(ym1(i,1,1,1)-ymin)-1
      enddo
      endif

      xmin = glmin(xm1,n)
      xmax = glmax(xm1,n)
      ymin = glmin(ym1,n)
      ymax = glmax(ym1,n)

      if (nid.eq.0) write(6,*) 'xmin,xmax',xmin,xmax,ymin,ymax

      return
      end
c-----------------------------------------------------------------------
      subroutine userft           
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      return
      end

c-----------------------------------------------------------------------
      subroutine userchk
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      real l2htol(3),l2etol(3)
      real linfhtol(3),linfetol(3)

      l2htol(1) = 0.0
      l2htol(2) = 0.0
      l2htol(3) = 1e-6
      l2etol(1) = 1e-6
      l2etol(2) = 1e-6
      l2etol(3) = 0.0

      linfhtol(1) = 0.0
      linfhtol(2) = 0.0
      linfhtol(3) = 1e-5
      linfetol(1) = 1e-5
      linfetol(2) = 1e-5
      linfetol(3) = 0.0

      if (istep.le.10.or.mod(istep,iocomm).eq.0) then
         call usersol(time,shn(1,1),shn(1,2),shn(1,3),sen(1,1),sen(1,2)
     $        ,sen(1,3))

         call cem_errorchk(hn,shn,errhn,l2htol,linfhtol)
         call cem_errorchk(en,sen,erren,l2etol,linfetol)
      endif
         
      return
      end
c-----------------------------------------------------------------------

